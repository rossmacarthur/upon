name: build

on: [push, pull_request]

jobs:

  # ---------------------------------------------------------------------------
  # Lint
  # ---------------------------------------------------------------------------

  lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        toolchain: [stable, beta, nightly]

    env:
      RUSTFLAGS: --deny warnings

    steps:
    - uses: actions/checkout@v4

    - uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.toolchain }}
        components: clippy, rustfmt

    - name: Rustfmt
      run: cargo fmt -- --check

    - name: Clippy
      continue-on-error: ${{ matrix.toolchain == 'nightly' }}
      run: cargo clippy --workspace --all-targets

    - name: Check (internal debug)
      run: cargo check
      env:
        RUSTFLAGS: --deny warnings --cfg internal_debug

  # ---------------------------------------------------------------------------
  # Test
  # ---------------------------------------------------------------------------

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - uses: extractions/setup-crate@v1
        with:
          owner: taiki-e
          name: cargo-hack

      - name: Test
        run: cargo test --workspace

      - name: Test (feature powerset)
        run: cargo hack test --package upon --feature-powerset --depth 2 --lib --tests

  # ---------------------------------------------------------------------------
  # MSRV
  # ---------------------------------------------------------------------------

  msrv:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@1.60
      - name: Check (no filters)
        run: cargo check --no-default-features --features serde,unicode

      - uses: dtolnay/rust-toolchain@1.65
      - name: Test
        run: cargo test
        env:
          RUSTFLAGS: --deny warnings

  # ---------------------------------------------------------------------------
  # Check README
  # ---------------------------------------------------------------------------

  readme:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable

    - name: Install cargo-onedoc
      run: cargo install cargo-onedoc --locked

    - name: Check README
      run: cargo onedoc --check

  # ---------------------------------------------------------------------------
  # Check version against tag
  # ---------------------------------------------------------------------------

  check-version:
    needs: [lint, test, msrv, readme]
    if: startsWith(github.ref, 'refs/tags/')

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Calculate version from tag
        id: version
        run: echo "value=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Check tag against package version
        run: grep '^version = "${{ steps.version.outputs.value }}"$' Cargo.toml

  # ---------------------------------------------------------------------------
  # Publish to Crates.io
  # ---------------------------------------------------------------------------

  publish:
    needs: check-version
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - name: Publish
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
      run: cargo publish
